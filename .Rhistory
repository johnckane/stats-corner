playoff_rate = total_yeas/total) %>%
mutate(week = x)
return(data_summary)
}
full_data <- rbind(g(1),g(2),g(3),g(4),g(5),g(6),g(7),g(8),g(9),g(10),g(11),g(12),g(13))
rate_matrix <- dcast(full_data,week~wins,value.var='playoff_rate')
this_week <- max(games_played %>% ungroup() %>% filter(year == 2017) %>% select(week))
long_rates <- rate_matrix %>% gather(.,key=week,value =prob,na.rm=TRUE)
colnames(long_rates) <- c("week","wins","prob")
long_rates <- long_rates %>% mutate(wins_plus_1 = as.numeric(wins) + 1, wins = as.numeric(wins))
data2017_summary2 <- left_join(data2017_summary,
cbind(c(0:12),t(rate_matrix[this_week,2:14])) %>%
data.frame() %>%
mutate(next_week= this_week + 1) %>%
`colnames<-`(c("W","playoff_prob",'next_week')),
by = "W") %>%
mutate(playoff_prob = paste0(round(100*playoff_prob,1),"%")) %>%
`colnames<-`(c("Owner","W","L","Points","PA","PW","SOS","Luck","Playoff Probability"))
colnames(data2017_summary2)
data2017_summary3 <- data2017_summary2 %>%
mutate(w_plus_1 = W + 1) %>%
left_join(.,
long_rates,
by = c("next_week" = "week","W" = "wins")) %>%
mutate(p_stay = prob) %>%
left_join(.,
long_rates,
by = c("next_week" = "week","w_plus_1" = "wins")) %>%
mutate(p_win = prob.y,
leverage = paste0(round(100*(p_win - p_stay),1),"%")) %>%
select(1,2,3,4,5,6,7,8,9,18) %>%
`colnames<-`(c("Owner","W","L","Points","PA","PW","SOS","Luck","Playoff Probability","Playoff Leverage"))
data2017_summary2 <- left_join(data2017_summary,
cbind(c(0:12),t(rate_matrix[this_week,2:14])) %>%
data.frame() %>%
mutate(next_week= this_week + 1) %>%
`colnames<-`(c("W","playoff_prob",'next_week')),
by = "W") %>%
mutate(playoff_prob = paste0(round(100*playoff_prob,1),"%"))
data2017_summary3 <- data2017_summary2 %>%
mutate(w_plus_1 = W + 1) %>%
left_join(.,
long_rates,
by = c("next_week" = "week","W" = "wins")) %>%
mutate(p_stay = prob) %>%
left_join(.,
long_rates,
by = c("next_week" = "week","w_plus_1" = "wins")) %>%
mutate(p_win = prob.y,
leverage = paste0(round(100*(p_win - p_stay),1),"%")) %>%
select(1,2,3,4,5,6,7,8,9,18) %>%
`colnames<-`(c("Owner","W","L","Points","PA","PW","SOS","Luck","Playoff Probability","Playoff Leverage"))
runApp('stats_corner/2017/advanced-standings')
library(googlesheets,lib.loc = "/home/ubuntu/R/x86_64-pc-linux-gnu-library/3.4")
library(shiny)
library(dplyr)
/
library(googlesheets,lib.loc = "/home/ubuntu/R/x86_64-pc-linux-gnu-library/3.4")
library(googlesheets)#,lib.loc = "/home/ubuntu/R/x86_64-pc-linux-gnu-library/3.4")
library(shiny)
library(dplyr)
library(reshape2)
library(tidyr)
sessionInfo()
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("rstudio/blogdown")
library(blogdown)
blogdown::install_hugo()
blogdown::new_site()
library(googlesheets)
library(xml2)
library(httr)
library(curl)
library(shiny)
library(dplyr)
library(reshape2)
library(tidyr)
library(readr)
workbook <- gs_url("https://docs.google.com/spreadsheets/d/1c24qtCDF6MnL1I-nNG2ovymFB3fYj1NsWpLe3SGCbJs/pubhtml")
last_updated <- workbook$update %>% as.Date(.,format = "%m/%d/&y") %>%
as.character() %>%
strptime(., "%Y-%m-%d", tz = "GMT") %>%
format(., "%B %d, %Y")
owner <- workbook %>% gs_read(ws = "Owner-Team Name")
games <- workbook %>% gs_read(ws = "Regular Season Games")
owner_games <- left_join(games,owner,by=c("year","team"))
data <- arrange(owner_games,game_id,points)
data$W <- rep(0,dim(data)[1])
data$L <- rep(0,dim(data)[1])
data$T <- rep(0,dim(data)[1])
data$PA <- rep(0,dim(data)[1])
data$result <- rep(" ",dim(data)[1])
data$last_of_streak <- rep(0,dim(data)[1])
data$Opponent <- rep("",dim(data)[1])
games_played <- data %>% filter(points > 0)
for(i in seq(from=1,to=dim(games_played)[1],by=2)){
games_played$PA[i]   <- games_played$points[i+1]
games_played$PA[i+1] <- games_played$points[i]
games_played$Opponent[i] <- games_played$owner[i+1]
games_played$Opponent[i+1] <- games_played$owner[i]
if(games_played$points[i] < games_played$points[i+1]){
games_played$L[i] <- 1
games_played$W[i+1] <- 1
games_played$result[i] <- "L"
games_played$result[i+1] <- "W"
}
if(games_played$points[i] == games_played$points[i+1]){
games_played$T[i] <- 1
games_played$T[i+1] <- 1
games_played$result[i] <- "T"
games_played$result[i+1] <- "T"
}
}
games_played <- games_played %>%
arrange(year,week,desc(points)) %>%
group_by(year,week) %>%
mutate(rk = rank(points,ties.method="min"),
opp_rk = rank(PA,ties.method="min"))
games_played$pw<- ifelse(games_played$year==2009,(games_played$rk-1)/9,(games_played$rk-1)/11)
games_played$opp_pw <- ifelse(games_played$year==2009,(games_played$opp_rk-1)/9,(games_played$opp_rk-1)/11)
data2017_summary <- data2017 %>%
group_by(owner) %>%
summarise(W = sum(W),
L = sum(L),
Points = sum(points),
PA = sum(PA),
PW = round(sum(pw),1),
SOS = round(sum(opp_pw)/n(),2),
Luck = W - PW) %>%
arrange(desc(PW))
g <- function(x){
data_all <- games_played %>%
filter(year != 2009,year!=2017,week<=x) %>%
group_by(year,team,playoffs) %>%
summarise(wins = sum(W)) %>%
group_by(wins) %>%
summarise(yeas = sum(playoffs),
ttl  = n()) %>%
select(wins,ttl,yeas)
data_summary <-
data_all %>%
group_by(wins) %>%
summarise(total_yeas = sum(yeas),
total      = sum(ttl),
playoff_rate = total_yeas/total) %>%
mutate(week = x)
return(data_summary)
}
full_data <- rbind(g(1),g(2),g(3),g(4),g(5),g(6),g(7),g(8),g(9),g(10),g(11),g(12),g(13))
rate_matrix <- dcast(full_data,week~wins,value.var='playoff_rate')
this_week <- max(games_played %>% ungroup() %>% filter(year == 2017) %>% select(week))
long_rates <- rate_matrix %>% gather(.,key=week,value =prob,na.rm=TRUE)
colnames(long_rates) <- c("week","wins","prob")
View(games_played)
colnames(games_played)
str(games_played)
top10_single_game_points <-
games_played %>%
ungroup() %>%
arrange(desc(points)) %>%
slice(1:10)
colnames(games_played)
top10_single_game_points <-
games_played %>%
ungroup() %>%
arrange(desc(points)) %>%
slice(1:10) %>%
select(owner,year,week,points)
View(top10_single_game_points)
playoff_games <- workbook %>% gs_read(ws = "Playoff Games")
owner_playoff_games <- left_join(games,owner,by = "year","team")
owner_playoff_games <- left_join(games,owner,by = c("year","team"))
owner_playoff_games <- left_join(playoff_games,owner,by = c("year","team"))
all_games <- bind_rows(owner_games,owner_playoff_games)
owner_games$week <- as.character(owner_games$week)
all_games <- bind_rows(owner_games,owner_playoff_games)
owner_games$game <- as.character(owner_games$game)
all_games <- bind_rows(owner_games,owner_playoff_games)
owner_games$game_id <- as.character(owner_games$game_id)
all_games <- bind_rows(owner_games,owner_playoff_games)
top10_single_game_points <-
all_games %>%
ungroup() %>%
arrange(desc(points)) %>%
slice(1:10) %>%
select(owner,year,week,points)
btm10_single_game_points <-
all_games %>%
ungroup() %>%
arrange(points) %>%
slice(1:10) %>%
select(owner,year,week,points)
View(top10_single_game_points)
View(btm10_single_game_points)
data %>%
group_by(owner,year) %>%
summarise(total_points = sum(points)) %>%
ungroup() %>%
arrange(desc(total_points)) %>%
slice(1:10)
btm10_season_points <-
data %>%
group_by(owner,year) %>%
summarise(total_points = sum(points)) %>%
ungroup() %>%
arrange(total_points) %>%
slice(1:10)
View(btm10_season_points)
btm10_season_points <-
data %>%
filter(year != 2017) %>%
group_by(owner,year) %>%
summarise(total_points = sum(points)) %>%
ungroup() %>%
arrange(total_points) %>%
slice(1:10)
View(btm10_season_points)
max_year <- max(data$year)
max_week_in_max_year <- max(data$week[which(data$year == max_year)])
max_week_in_max_year
View(btm10_season_points)
top10_season_pw <-
data %>%
group_by(owner,year) %>%
summarise(total_pw = sum(PW)) %>%
ungroup() %>%
arrange(desc(total_pw)) %>%
slice(1:10)
games_played <- data %>% filter(points > 0)
for(i in seq(from=1,to=dim(games_played)[1],by=2)){
games_played$PA[i]   <- games_played$points[i+1]
games_played$PA[i+1] <- games_played$points[i]
games_played$Opponent[i] <- games_played$owner[i+1]
games_played$Opponent[i+1] <- games_played$owner[i]
if(games_played$points[i] < games_played$points[i+1]){
games_played$L[i] <- 1
games_played$W[i+1] <- 1
games_played$result[i] <- "L"
games_played$result[i+1] <- "W"
}
if(games_played$points[i] == games_played$points[i+1]){
games_played$T[i] <- 1
games_played$T[i+1] <- 1
games_played$result[i] <- "T"
games_played$result[i+1] <- "T"
}
}
games_played <- data %>% filter(points > 0)
for(i in seq(from=1,to=dim(games_played)[1],by=2)){
games_played$PA[i]   <- games_played$points[i+1]
games_played$PA[i+1] <- games_played$points[i]
games_played$Opponent[i] <- games_played$owner[i+1]
games_played$Opponent[i+1] <- games_played$owner[i]
if(games_played$points[i] < games_played$points[i+1]){
games_played$L[i] <- 1
games_played$W[i+1] <- 1
games_played$result[i] <- "L"
games_played$result[i+1] <- "W"
}
if(games_played$points[i] == games_played$points[i+1]){
games_played$T[i] <- 1
games_played$T[i+1] <- 1
games_played$result[i] <- "T"
games_played$result[i+1] <- "T"
}
}
games_played <- games_played %>%
arrange(year,week,desc(points)) %>%
group_by(year,week) %>%
mutate(rk = rank(points,ties.method="min"),
opp_rk = rank(PA,ties.method="min"))
games_played$pw<- ifelse(games_played$year==2009,(games_played$rk-1)/9,(games_played$rk-1)/11)
games_played$opp_pw <- ifelse(games_played$year==2009,(games_played$opp_rk-1)/9,(games_played$opp_rk-1)/11)
top10_season_pw <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_pw = sum(pw)) %>%
ungroup() %>%
arrange(desc(total_pw)) %>%
slice(1:10)
btm10_season_points <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_pw = sum(pw)) %>%
ungroup() %>%
arrange(total_points) %>%
slice(1:10)
View(top10_season_pw)
btm10_season_pw <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_pw = sum(pw)) %>%
ungroup() %>%
arrange(total_pw) %>%
slice(1:10)
btm10_season_pw <-
games_played  %>%
filter(year != max_year) %>%
group_by(owner,year) %>%
summarise(total_points = sum(pw)) %>%
ungroup() %>%
arrange(total_pw) %>%
slice(1:10)
View(btm10_season_pw)
btm10_season_pw <-
games_played  %>%
filter(year != max_year) %>%
group_by(owner,year) %>%
summarise(total_points = sum(pw)) %>%
ungroup() %>%
arrange(total_pw) %>%
slice(1:10)
btm10_season_pw <-
games_played  %>%
filter(year != max_year) %>%
group_by(owner,year) %>%
summarise(total_pw = sum(pw)) %>%
ungroup() %>%
arrange(total_pw) %>%
slice(1:10)
View(btm10_season_pw)
top10_season_w <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(1:10)
View(top10_season_w)
btm10_season_w <-
games_played  %>%
filter(year != max_year) %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(total_w) %>%
slice(1:10)
View(btm10_season_w)
games_played %>%
ungroup() %>%
group_by(owner) %>%
summarise(total_w = sum(W),
total_games = n(),
total_pw = sum(pw))
games_played %>%
ungroup() %>%
group_by(owner) %>%
summarise(total_w = sum(W),
total_games = n(),
total_pw = sum(pw)) %>%
mutate(win_pct = total_w/total_games,
pw_pct = total_pw/total_games)
games_played %>%
ungroup() %>%
group_by(owner) %>%
summarise(total_w = sum(W),
total_games = n(),
total_pw = sum(pw)) %>%
mutate(win_pct = total_w/total_games,
pw_pct = total_pw/total_games) %>%
arrange(desc(win_pct))
career_stats <-
games_played %>%
ungroup() %>%
group_by(owner) %>%
summarise(total_w = sum(W),
total_games = n(),
total_pw = sum(pw)) %>%
mutate(win_pct = total_w/total_games,
pw_pct = total_pw/total_games) %>%
arrange(desc(pw_pct))
View(career_stats)
career_stats <-
games_played %>%
ungroup() %>%
group_by(owner) %>%
mutate(max_pw = ifelse(pw == 1,1,0),
min_pw = ifelse(pw == 0,1,0)) %>%
summarise(total_w = sum(W),
total_games = n(),
total_pw = sum(pw),
total_max_pw = sum(max_pw),
total_min_pw = sum(min_pw)) %>%
mutate(win_pct = total_w/total_games,
pw_pct = total_pw/total_games) %>%
arrange(desc(pw_pct))
View(career_stats)
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
?tabsetPanel
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
no10_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(10)
no11_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(11)
no10_top == no11_top
no10_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(10) %>%
select(total_w)
no11_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(11) %>%
select(total_w)
no10_top == no11_top
no10_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(10) %>%
select(total_w) %>%
unlist()
no11_top <-
games_played  %>%
group_by(owner,year) %>%
summarise(total_w = sum(W)) %>%
ungroup() %>%
arrange(desc(total_w)) %>%
slice(11) %>%
select(total_w) %>%
unlist()
no10_top == no11_top
if(no10_to == no11_top){print("tied")}
if(no10_top == no11_top){print("tied")}
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
runApp('stats_corner/2017/record-book')
library(blogdown)
blogdown::serve_site()
library(bookdown)
setwd("/home/john/stats-corner")
blogdown::build_site()
blogdown::serve_site()
library(bookdown)
setwd("/home/john/stats-corner")
blogdown::build_site()
blogdown::serve_site()
steps <-  c(0,5000,6250,8750,10000)
cals <- c(1752,2243,2646,3049,3645)
library(ggplot2)
df <- data.frame(steps,cals)
qplot(data=df, x = steps, y = cals) + geom_smooth(method = "lm")
steps <-  c(0,5000,6250,8750,10000)
cals <- c(1818,2328,2746,3164,3782)
predict(object = fit, newdata = data.frame(steps = c(seq(from = 2000, to = 5000, by = 1000),seq(from = 5500, to = 12000, by =500))))
fit <- lm(data=df, cals ~ steps)
predict(object = fit, newdata = data.frame(steps = c(seq(from = 2000, to = 5000, by = 1000),seq(from = 5500, to = 12000, by =500))))
